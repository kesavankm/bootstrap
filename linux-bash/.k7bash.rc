alias python=python3
export K7BASHPATH=/home/kmannar/bootstrap/linux-bash/
alias sal='source ${K7BASHPATH}/.k7bash.rc'
export PYTHONPATH=/vnfs/coding_prep/
export PATH="$PATH:/usr/local/go/bin"
#export PATH="$PATH:/usr/local/go/bin:$(go env GOPATH)/bin"

alias cds='cd /cds'

# Wifi access point show with signal strength
alias wifishow="nmcli -f in-use,ssid,bssid,signal,bars  dev wifi"

export NFS_IP=192.168.86.251
# Mount cds
mnt_cds()
{
    sudo mount -t nfs $NFS_IP:/nfs/cds /cds
}

# Mount Action camera
alias mnt_actcam="sudo mount /dev/sda1 /media/usb-actcam"
alias umnt_actcam="sudo umount /media/usb-actcam"

# Mount Action camera
alias mnt_slr="sudo mount /dev/sda1 /media/usb-slr"
alias umnt_slr="sudo umount /media/usb-slr"

# Backup Action camera contents to Cloud
alias bkp_actcam="rsync -avzh --progress --stats /media/usb-actcam/ root@192.168.1.121:/mnt/HD/HD_a2/action_cam"
alias bkp_slr="rsync -avzh --progress --stats /media/usb-slr/ root@192.168.1.121:/nfs/cam_slr/auto_bkp"


parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -1) != "nothing to commit, working tree clean" ]] && echo "*"
}

parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

show_git_prompt () {
  #git branch 2>/dev/null 1>&2 && echo -e "-( \e[33;1m$(parse_git_branch)\e[31;1m )"
  git branch 2>/dev/null 1>&2 && echo -e "-($(parse_git_branch))"
}

if [[ -n $(type -t git) ]] ; then
  GIT_BRANCH="\$(show_git_prompt)"
else
  GIT_BRANCH=
fi

#PS1="
#\[\e[31;1m\]┌───[ \[\e[39;1m\]\u\[\e[31;1m\] :: \[\e[33;1m\]\h\[\e[31;1m\] ]-[ \[\e[39;1m\]\w\[\e[31;1m\] ]$GIT_BRANCH
#\[\e[31;1m\]└──=( \[\e[0m\]"

PS1="
\[\e[31;1m\]┌───[ \[\e[39;1m\]\w\[\e[31;1m\] ]$GIT_BRANCH
\[\e[31;1m\]└──=( \[\e[0m\]"


# Docker commands
dock()
{
    if [ $# -lt 1 ]; then
        echo "script requires 1 arg <docker_name>"
        return 1;
    else
        echo "docker exec -it $1 /bin/bash"
        docker exec -it $1 /bin/bash
    fi;
}

appin()
{
    if [ $# -lt 1 ]; then
        echo "script requires 1 arg <app_name>"
        echo "USAGE: appin docker"
        return 1;
    else
        CMD="sudo apt-get install $1 $2"
        echo $CMD
        $CMD
    fi;
}

export _DOCKER_REGISTRY=""
set_docker_registry()
{
    if [ $# -lt 1 ]; then
        echo "${FUNCNAME[0]} requires 1 arg docker.registry";
        exit 1
    else
        export _DOCKER_REGISTRY=$1
    fi
}

dkrdeply()
{
    if [ $# -lt 2 ]; then
        echo "${FUNCNAME[0]} requires 2 args <tag> docker";
    else
        CMD="docker tag $2 ${_DOCKER_REGISTRY}/$2:$1 && docker push ${_DOCKER_REGISTRY}/$2:$1";
        echo $CMD
        docker tag $2 ${_DOCKER_REGISTRY}/$2:$1 && docker push ${_DOCKER_REGISTRY}/$2:$1
    fi;
}
alias k=kubectl

alias csc="find . -path .git -prune -o -name "*.[ch]" -print > cscope.files;cscope -b -q -k"
alias vncser="vncserver -geometry 1600x1200 -localhost no"

source ${K7BASHPATH}/.k7git.sh
source ${K7BASHPATH}/.k7k8s.sh
source ${K7BASHPATH}/.k7work.sh
alias vk7a="vim ${K7BASHPATH}/.k7bash.rc"
alias vk7g="vim ${K7BASHPATH}/.k7git.sh"
alias vk7k8s="vim ${K7BASHPATH}/.k7k8s.sh"

source ${K7BASHPATH}/bash-complete-kafkaclient.inc

echo "Loaded k7 Bash"
#tmux
